{"version":3,"sources":["webpack/bootstrap","./js/main.js","./js/view.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;;AAEA,WAAW,mBAAO,CAAC,4BAAQ;;AAE3B;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACPD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+CAA+C;AAC/C,sDAAsD;AACtD;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,MAAM;AACN;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,mDAAmD,4BAA4B;AAC/E;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA,GAAG;;AAEH;;;;AAIA;AACA;AACA;AACA;;AAEA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;;AAEA,gBAAgB,QAAQ;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* globals $ */\n\nvar View = require(\"./view\");\n\n$(function () {\n  var $easel = $(\"#easel\");\n  new View($easel);\n});\n","/* jshint esversion: 6 */\n\nfunction View($el) {\n  this.$el = $el;\n  this.setupEasel();\n}\n\nwindow._randomColorString = function(){\n  return '#' + Math.random().toString(16).substr(-6);\n};\n\nView.prototype.exercise0 = function () {\n  //Challenge: (example) remove the 'square' class from every li\n  //Result: this should cause the grid to turn into a long list of undecorated lis\n  //just a list of dots\n\n  //this one completed as an example :) no additional code necessary\n  // $('li').removeClass(\"square\");\n\n  // vanilla DOM\n  let liTags = document.querySelectorAll(\"li\"); // getElementsByTagName didn't work\n  // let liTags = document.getElementsByTagName(\"li\"); // returns live HTMLCollection\n  liTags.forEach( function (li) {\n    li.classList.remove(\"square\");\n    // li.className = \"\";\n  })\n};\n\nView.prototype.exercise1 = function () {\n  //Challenge: Give every square the class 'orange'\n  //Result: Every square should turn orange (we already have a CSS rule)\n  console.log(\"Exercise 1 activated\");\n  // $(\".square\").addClass(\"orange\");\n\n  // vanilla DOM\n  // let squares = document.getElementsByClassName(\"square\");\n  let squares = document.querySelectorAll(\"li.square\");\n  console.log(squares[0]);\n  // need to convert html collection / node list into Array for forEach\n  Array.from(squares).forEach( function (square) {\n    square.classList.add(\"orange\");\n  })\n};\n\nView.prototype.exercise2 = function () {\n  //Challenge: Remove every square\n  //Result: Every square vanishes\n\n  console.log(\"Exercise 2 activated\");\n  // $(\".square\").hide();\n  // $(\".square\").remove();\n  \n  // vanilla DOM\n  let squares = document.querySelectorAll(\"li.square\"); // returns nodelist\n  console.log(squares[0]);\n  // need to convert html collection / node list into Array for forEach\n  Array.from(squares).forEach(function (square) {\n    square.remove();\n  })\n  \n};\n\nView.prototype.exercise3 = function () {\n  //Challenge: Add an <h1> with the text 'i love jquery' under the grid.\n  //Result: An <h1> with the text 'i love jquery' appears under the grid.\n  console.log(\"Exercise 3 activated\");\n  // let $h1 = $(\"<h1></h1>\");\n  // $h1.text(\"i love jquery\"); // lowercase?\n  // $(\"#easel\").append($h1);\n\n  // vanilla DOM\n  let easel = document.getElementById(\"easel\");\n  let newH1 = document.createElement(\"h1\");\n  newH1.textContent = \"i love jQuery\";\n  easel.appendChild(newH1);\n};\n\nView.prototype.exercise4 = function () {\n  //Challenge: Write your first name in every other square.\n  //Result: Your name appears in every other square.\n  console.log(\"Exercise 4 activated\");\n  // $(\".square:nth-child(2n)\").text(\"gary\");\n\n  // vanilla DOM\n  let evenSquares = document.querySelectorAll(\".square:nth-child(even)\");\n  console.log(evenSquares);\n  Array.from(evenSquares).forEach( function (square) {\n    square.textContent = \"gary\";\n  })\n};\n\nView.prototype.exercise5 = function () {\n  //Challenge: Alert the row and column of the square, when the square is clicked.\n  //Result: When a square is clicked, the row and column appear in an alert. for\n  //example: clicking the top left square should alert '0, 0'.\n\n  //hint: checkout the addRow function at the bottom of the file: we set the\n  //  'data-pos' of every square\n\n  console.log(\"Exercise 5 activated\");\n\n  // $(\"#easel\").on(\"click\", \".square\", function (event) {\n  //   // 2 ways:\n  //   // $pos = $(event.target).attr(\"data-pos\");\n  //   $pos = $(event.target).data(\"pos\");\n  //   alert($pos);\n  // })\n\n  // vanilla DOM\n  let easel = document.getElementById(\"easel\");\n\n  easel.addEventListener(\"click\", function (event) {\n    if (event.target.className === \"square\") {\n      let pos = event.target.getAttribute(\"data-pos\");\n      console.log(pos);\n      alert(pos);\n    }\n  })\n\n  // this also works (but attaches listener on every square)\n  // let squares = document.querySelectorAll(\"li.square\");\n  // Array.from(squares).forEach( function (square) {\n  //   square.addEventListener(\"click\", function (event) {\n  //     // event.preventDefault;\n  //     console.log(\"hello\");\n  //     console.log(event.currentTarget.getAttribute(\"data-pos\"));\n  //   })\n  // })\n};\n\nView.prototype.exercise6 = function () {\n  //Challenge: Give every square a random color!\n  //Result: Every square becomes a color as soon as this code runs. The grid\n  //should become a beautiful rainbow of colors.\n\n  //hint: use window._randomColorString() (defined at top) to get a random color!\n\n  console.log(\"Exercise 6 activated\");\n  // let $squareElements = $(\".square\");\n  // $squareElements.each( (_, square) => {\n  //   $(square).css(\"background-color\", window._randomColorString());\n  // })\n\n  // vanilla DOM\n  let squares = document.getElementsByClassName(\"square\");\n  Array.from(squares).forEach( function (square) {\n    // square.style.cssText = `background-color: ${window._randomColorString()}`;\n    square.style.backgroundColor = window._randomColorString();\n  })\n};\n\nView.prototype.exercise7 = function(){\n  //Challenge: When your mouse goes over a square, console log its color.\n  //Result: When the mouse goes over a square its color should appear in the\n  //console. The color won't be the color's name, but its rbg value.\n  //You should push the button for exercise 6 first to try it on the\n  //rainbow.\n\n  console.log(\"Exercise 7 activated\");\n  // $(\"#easel\").on(\"mouseover\", \".square\", (event) => {\n  //   console.log( $(event.target).css(\"background-color\") );\n  // })\n\n  // vanilla DOM\n  let easel = document.getElementById(\"easel\");\n  easel.addEventListener(\"mouseover\", function (event) {\n    console.log( event.target.style.backgroundColor );\n  })\n\n};\n\n\n\nView.prototype.setupEasel = function() {\n  const $addRowButton = $('<button>').html('Add a row');\n  this.$el.append($addRowButton);\n  $addRowButton.on(\"click\", this.addRow.bind(this));\n\n  for(let j = 0; j <= 7; j++){\n    const $button = $(\"<button>\").html(\"Exercise \" + j);\n    $button.on(\"click\", this[\"exercise\" + j]);\n    this.$el.append($button);\n  }\n\n  for(let i = 0; i < 20; i ++) {\n    this.addRow();\n  }\n};\n\nView.prototype.addRow = function() {\n  const rowIdx = this.$el.find(\".row\").length;\n  const $row = $(\"<ul>\").addClass(\"row\").addClass(\"group\");\n  for(let colIdx = 0; colIdx < 20; colIdx++) {\n    const $square = $(\"<li>\").addClass(\"square\").attr(\"data-pos\", [rowIdx, colIdx]);\n    $square.on(\"mouseenter\", (e) => {\n      const $square = $(e.currentTarget);\n      $square.css(\"background-color\", window._randomColorString());\n    });\n    $row.append($square);\n  }\n  this.$el.append($row);\n};\n\nmodule.exports = View;\n"],"sourceRoot":""}